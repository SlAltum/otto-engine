package main

import (
	"fmt"

	"github.com/robertkrimen/otto"
	"github.com/robertkrimen/otto/parser"
)

func main() {
	vm := otto.New()
	vm.Run(`
		abc = 2 + 2;
		console.log("The value of abc is " + abc); // 4
	`)
	if value, err := vm.Get("abc"); err == nil {
		if value_int, err := value.ToInteger(); err != nil {
			fmt.Printf("get value error: %d %s\n", value_int, err)
		}
	}
	vm.Set("def", 11)
	vm.Run(`
		console.log("The value of def is " + def);
		// The value of def is 11
	`)
	vm.Set("xyzzy", "Nothing happens.")
	vm.Run(`
		console.log(xyzzy.length); // 16
	`)
	value, _ := vm.Run("xyzzy.length")
	valueInt, _ := value.ToInteger()
	fmt.Printf("xyzzy.length = %d", valueInt)
	vm.Set("sayHello", func(call otto.FunctionCall) otto.Value {
		fmt.Printf("Hello, %s.\n", call.Argument(0).String())
		return otto.Value{}
	})
	vm.Set("twoPlus", func(call otto.FunctionCall) otto.Value {
		right, _ := call.Argument(0).ToInteger()
		result, _ := vm.ToValue(2 + right)
		return result
	})
	result, _ := vm.Run(`
		sayHello("Xyzzy");      // Hello, Xyzzy.
		sayHello();             // Hello, undefined

		result = twoPlus(2.0); // 4
		result2 = twoPlus(result); // 4
	`)
	fmt.Println(result)

	filename := "log.log" // A filename is optional
	src := `
		// Sample xyzzy example
		(function(){
			if (3.14159 > 0) {
				console.log("Hello, World.");
				return;
			}

			var xyzzy = NaN;
			console.log("Nothing happens.");
			return xyzzy;
		})();
	`

	// Parse some JavaScript, yielding a *ast.Program and/or an ErrorList
	// program, err := parser.ParseFile(nil, filename, src, 0)
	parser.ParseFile(nil, filename, src, 0)
}
